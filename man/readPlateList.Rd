\name{readPlateList}
\alias{readPlateList}
\title{Read a collection of plate reader data files}
\description{
  Reads a collection of plate reader data files into a data.frame.
  The names of the files, plus additional information
  (plate number, repeat number) is expected in a tab-delimited table specified
  by the argument \code{filename}.  
}
\usage{
readPlateList(filename, path=dirname(filename), name, importFun, verbose=interactive())
}
\arguments{
  \item{filename}{the name of the file table (see details).
    This argument is just passed on to the \code{\link{read.table}}
    function, so any of the valid argument
    types for \code{\link{read.table}} are valid here, too.}
  \item{path}{a character of length 1 indicating the path in
    which to find the plate reader files. By default, 
    it can extract the path from \code{filename}.}
  \item{name}{a character of length 1 with the experiment name.}
  \item{importFun}{a function that should be used to read each plate result file. The default function works for plate reader data files. See details.}
   \item{verbose}{a logical value, if TRUE, the function reports some of its intermediate progress. Defaults to the state of \code{\link[base:interactive]{interactive()}}.}
}

\details{The file table is expected to be a tab-delimited file with at
  least three columns, and column names \code{Filename}, \code{Plate},
  and \code{Replicate}. The contents of the columns \code{Plate} and
  \code{Replicate} are expected to be integers. Further columns are
  allowed.

  We distinguish between \emph{plates} and \emph{plate result file}.
  A plate result file contains the measurements results for all
  replicates and all channels of a plate, which is the physical carrier
  of the reagents. 

\code{importFun} can be used to define other functions to import other data files, such as flow cytometry data files, etc. The \code{importFun} function should receive as an input the name of a result plate file to read, and return a list with two components:
\itemize{
 \item The first component should be a 'data.frame' with the following slots:
   \itemize{
     \item \code{well}, a character vector with the well identifier in the plate.
     \item \code{val}, the intensity values measured at each well.
  }
 \item The second component of this list should be a character vector containing a copy of the imported input data file (such as the output of \code{\link[base:readLines]{readLines}}). It should be suitable to be used as input for \code{\link[base:writeLines]{writeLines}}. %, since it will be used to reproduce the intensity files that are linked in the HTML quality reports generated by \code{\link[cellHTS2:writeReport]{writeReport}}.
}
For example, to import plate data files from EnVision plate reader, set \code{importFun=getEnVisionRawData} or \code{importFun=getEnvisionCrosstalkCorrectedData}. See function \code{\link[cellHTS2]{getEnVisionRawData}}.

}

\value{
  An object of class \code{\linkS4class{cellHTS}}, which extends the class \code{\link[Biobase]{NChannelSet}}. 
After calling this function, the content of the following slots is as follows:
	\item{assayData}{an object of class \code{\link[Biobase]{AssayData}} containing the imported measurement data. Each matrix represents a single channel, and each sample (replicate) corresponds to a column. Thus, the total number of rows in each matrix corresponds to the product between the number of wells per plate and the number of assay plates.}

  \item{phenoData}{the argument \code{name} is stored in its column \code{assay}.}
  \item{featureData}{the information about the plate and well identifiers for each plate measurement are stored in columns \code{plate} and \code{well} of this slot.}
  \item{plateList}{a data.frame containing what was read from input file
    \code{x}, plus a column \code{status} of type character: it contains
    the string "OK" if the data import
    appeared to have gone well, and the respective error or warning
    message otherwise.}
  \item{intensityFiles}{a list, where each component contains a
    copy of the imported input data files. Its length corresponds to the
    number of rows of \code{plateList}.}
}

\author{W. Huber \email{huber@ebi.ac.uk}, Ligia Bras \email{ligia@ebi.ac.uk}}

\references{
Boutros, M., Bras, L.P. and Huber, W. (2006) Analysis of cell-based RNAi screens, \emph{Genome Biology} \bold{7}, R66.
}


\examples{
    datadir <- system.file("KcViabSmall", package = "cellHTS2")
    x <- readPlateList("Platelist.txt", "KcViabSmall", path=datadir)


   ## To read data files obtained from an EnVision plate reader:
    datadir <- system.file("EnVisionExample", package = "cellHTS2")
    x <- readPlateList("platelist.txt", name="EnVisionEx",
          importFun=getEnVisionRawData, path=datadir)

       ## to get the cross talk corrected data:
       y <- readPlateList("platelist.txt", name="EnVisionEx", 
           importFun=getEnVisionCrosstalkCorrectedData, path=datadir)


}
\keyword{manip}
